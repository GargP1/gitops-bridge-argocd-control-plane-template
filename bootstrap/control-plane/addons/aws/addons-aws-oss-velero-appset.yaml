---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: addons-aws-velero
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
  - clusters:
      values:
        addonChartVersion: 7.1.5
        s3_bucket_name: nht-2019
        s3_bucket_prefix: /
        iam_role_arn: arn:aws:iam::412857254796:role/karp-karpenter
        region: ap-southeast-2
      selector:
        matchLabels:
          environment: test-dev
        matchExpressions:
          - key: enable_velero
            operator: In
            values: ['true']
  template:
    metadata:
      name: addon-velero
    spec:
      project: default
      sources:
        - repoURL: '{{metadata.annotations.addons_repo_url}}'
          targetRevision: '{{metadata.annotations.addons_repo_revision}}'
          ref: values
        - chart: 'velero'
          repoURL: 'https://vmware-tanzu.github.io/helm-charts'
          targetRevision: '{{values.addonChartVersion}}'
          helm:
            releaseName: 'velero'
            ignoreMissingValueFiles: true
            valueFiles:
              - $values/{{metadata.annotations.addons_repo_basepath}}common/addons/velero/values.yaml
              - $values/{{metadata.annotations.addons_repo_basepath}}clusters/{{name}}/addons/velero/values.yaml
            values: |
              serviceAccount:
                server:
                  name: velero
                  annotations:
                    eks.amazonaws.com/role-arn: '{{values.iam_role_arn}}'
              configuration:
                backupStorageLocation:
                - name: primary
                  provider: aws
                  prefix: '{{values.s3_bucket_prefix}}'
                  bucket: '{{values.s3_bucket_name}}'
                  default: true
                  config:
                    region: '{{values.region}}'
                volumeSnapshotLocation:
                - name: primary
                  provider: aws
                  config:
                    region: '{{values.region}}'
                    bucket: '{{values.s3_bucket_name}}'
      destination:
        namespace: alpha
        name: '{{name}}'
      syncPolicy:
        automated: {}
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true  # Big CRDs.
